==1315221== Memcheck, a memory error detector
==1315221== Copyright (C) 2002-2024, and GNU GPL'd, by Julian Seward et al.
==1315221== Using Valgrind-3.24.0 and LibVEX; rerun with -h for copyright info
==1315221== Command: ./aed-prj2
==1315221== 
==1315221== Invalid read of size 8
==1315221==    at 0x10A4C3: tree_avl_insert (aed-prj2.c:528)
==1315221==    by 0x10A731: tree_avl_insert_arr (aed-prj2.c:584)
==1315221==    by 0x10A925: main (aed-prj2.c:627)
==1315221==  Address 0x27fefff658 is not stack'd, malloc'd or (recently) free'd
==1315221== 
==1315221== 
==1315221== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1315221==  Access not within mapped region at address 0x27FEFFF658
==1315221==    at 0x10A4C3: tree_avl_insert (aed-prj2.c:528)
==1315221==    by 0x10A731: tree_avl_insert_arr (aed-prj2.c:584)
==1315221==    by 0x10A925: main (aed-prj2.c:627)
==1315221==  If you believe this happened as a result of a stack
==1315221==  overflow in your program's main thread (unlikely but
==1315221==  possible), you can try to increase the size of the
==1315221==  main thread stack using the --main-stacksize= flag.
==1315221==  The main thread stack size used in this run was 8388608.
==1315221== 
==1315221== HEAP SUMMARY:
==1315221==     in use at exit: 41,264 bytes in 3 blocks
==1315221==   total heap usage: 66 allocs, 63 frees, 1,418,952 bytes allocated
==1315221== 
==1315221== LEAK SUMMARY:
==1315221==    definitely lost: 0 bytes in 0 blocks
==1315221==    indirectly lost: 0 bytes in 0 blocks
==1315221==      possibly lost: 0 bytes in 0 blocks
==1315221==    still reachable: 41,264 bytes in 3 blocks
==1315221==         suppressed: 0 bytes in 0 blocks
==1315221== Rerun with --leak-check=full to see details of leaked memory
==1315221== 
==1315221== For lists of detected and suppressed errors, rerun with: -s
==1315221== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
